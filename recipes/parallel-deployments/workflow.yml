---
kind: breeds
name: runner-requester
deployable:
  type: application/javascript
  definition: |
    'use strict';

    let _ = require('highland');
    let vamp = require('vamp-node-client');

    let api = new vamp.Api();
    let http = new vamp.Http();

    var vga;

    var process = function () {
      if (!vga) {
        api.config().each(function (config) {
          vga = config['vamp.gateway-driver.host'];
        });
      } else {
        var count = 0;
        _(function (push, next) {
          if (count < 3) {
            push(null, count++);
            next();
          }
          else push(null, _.nil)
        }).flatMap(function (index) {
          return _(http.get('http://' + vga + ':' + (9062 + index)).then(function (response) {
            return JSON.parse(response).id === "backend:" + (index + 1);
          }));
        }).reduce1(function (a, b) {
          return a && b;
        }).each(function (result) {
          api.event(['workflows:runner-requester', result ? 'response:ok' : 'response:failed']);
        });
      }
    };

    setInterval(process, 1000);

---
kind: workflows
name: runner-requester
breed: runner-requester
schedule: daemon
environment_variables:
  VAMP_WORKFLOW_EXECUTION_PERIOD:  0
  VAMP_WORKFLOW_EXECUTION_TIMEOUT: 0
