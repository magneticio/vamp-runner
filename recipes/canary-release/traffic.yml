---
kind: breeds
name: traffic
deployable:
  type: application/javascript
  definition: |
    'use strict';

    let _ = require('highland');
    let vamp = require('vamp-node-client');

    let api = new vamp.Api();
    let http = new vamp.Http();
    let headers = {'Accept': 'application/json', 'Content-Type': 'application/json'};

    var $period = Number(process.env.PERIOD); // ms

    var vga;
    var count = 0;

    var run = function() {
      if (!vga) {
        api.config().each(function (config) {
          vga = config['vamp.gateway-driver.host'];
        });
      } else {
        count++;
        http.get('http://' + vga + ':' + process.env.PORT).then(function () {
          if (count % (10000 / $period) == 0)
            api.event(['workflows:traffic', 'response:ok'], count);
        }).catch(function (error) {
          api.event(['workflows:traffic', 'response:error'], error);
        });
      }
    };

    setInterval(run, $period);

---
kind: workflows
name: traffic
breed: traffic
schedule: daemon
environment_variables:
  PERIOD: 500
  PORT  : 9050
  VAMP_WORKFLOW_EXECUTION_PERIOD:  0
  VAMP_WORKFLOW_EXECUTION_TIMEOUT: 0
